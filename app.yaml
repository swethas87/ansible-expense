- name: configure backend server
  hosts: app
  become: yes
  vars:
    login_host: app.niksantechnologies.com
  vars_prompt:
    - name: mysqlroot_password
      private: no
  tasks: #
    - name: disable default nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs:20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.dnf:
        name: dnf
        state: installed

    - name: add user expense
      ansible.builtin.user:
        name: expense

        state: latest

    - name: Start and enable Mysql server
      ansible.builtin.service:
        name: mysqld
        state: started

    - name: install python mysql dependencies
      ansible.builtin.pip:
        name:
          - PyMySQL
          - cryptography
        executable: pip3.9 #pip3.11 if pythong version is 3.11

      #check if mysql password is already setup or not
    - name: check DB connection
      community.mysql.mysql_info:
        login_user: root
        login_password: "{{mysqlroot_password}}"
        login_host: "{{ login_host }}"
        filter: version
      ignore_errors: yes
      register: mysql_connection_output

    - name: print output
      ansible.builtin.debug:
        msg: "output is {{mysql_connection_output}}"

    - name: setup root password
      ansible.builtin.command: "mysql_secure_installation --set-root-pass {{mysqlroot_password}}"
      when: mysql_connection_output.failed is true #dont give {{}} in when confition
