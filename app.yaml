- name: configure backend server
  hosts: app
  become: yes
  vars:
    login_host: db.niksantechnologies.com
    login_password: mysqlroot_password
  vars_prompt:
    - name: mysqlroot_password
      private: no
  tasks: #
    - name: disable default nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs:20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: installed

    - name: add user expense
      ansible.builtin.user:
        name: expense

    - name: create a directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: downloadbackend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: unzip backend code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: install npm dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy backendservice to remote server
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: install python mysql dependencies
      ansible.builtin.pip:
        name:
          - PyMySQL
          - cryptography
        executable: pip3.9 #pip3.11 if python version is 3.11

    - name: import data into mysql
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        state: dump
        name: all
